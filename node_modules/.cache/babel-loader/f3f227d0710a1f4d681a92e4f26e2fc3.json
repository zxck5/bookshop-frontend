{"ast":null,"code":"var _jsxFileName = \"/Users/jiwon/Desktop/spring-boot/jpashop/frontend/src/members/memberList.js\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [memberList, setMemberList] = useState([]);\n  useEffect(() => {\n    axios.get(\"/members\").then(res => {\n      setMemberList(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"MEMBER LIST\", /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), memberList.map(m => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"email : \", m.email, \" || address : \", m.city, \" || street : \", m.street, \" || zipcode : \", m.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["useState","useEffect","axios","Table","memberList","setMemberList","get","then","res","data","map","m","email","city","street","zipcode"],"sources":["/Users/jiwon/Desktop/spring-boot/jpashop/frontend/src/members/memberList.js"],"sourcesContent":["\nimport {useState,useEffect} from 'react';\nimport axios from \"axios\";\nimport Table from 'react-bootstrap/Table';\n\n\nexport default function (){\n    const [memberList, setMemberList] = useState([]);\n\n\n    useEffect(()=>{\n        axios.get(\"/members\")\n            .then(res =>{\n                setMemberList(res.data);\n            })\n\n    },[])\n\n\n    return(\n\n        <div>MEMBER LIST\n\n\n            <Table>\n                <thead></thead>\n                <tbody></tbody>\n            </Table>\n\n            {memberList.map(m=>{\n                return <div>\n                    email : {m.email} ||\n                    address : {m.city} ||\n                    street : {m.street} ||\n                    zipcode : {m.zipcode}\n                </div>\n            })}\n\n\n        </div>\n\n    )\n\n\n}"],"mappings":";AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,eAAe,YAAW;EACtB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;EAGAC,SAAS,CAAC,MAAI;IACVC,KAAK,CAACI,GAAN,CAAU,UAAV,EACKC,IADL,CACUC,GAAG,IAAG;MACRH,aAAa,CAACG,GAAG,CAACC,IAAL,CAAb;IACH,CAHL;EAKH,CANQ,EAMP,EANO,CAAT;EASA,oBAEI;IAAA,uCAGI,QAAC,KAAD;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAQKL,UAAU,CAACM,GAAX,CAAeC,CAAC,IAAE;MACf,oBAAO;QAAA,uBACMA,CAAC,CAACC,KADR,oBAEQD,CAAC,CAACE,IAFV,mBAGOF,CAAC,CAACG,MAHT,oBAIQH,CAAC,CAACI,OAJV;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IAMH,CAPA,CARL;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAyBH"},"metadata":{},"sourceType":"module"}